<?xml version="1.0"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2015 Michael Schmalle - Teoti Graphix, LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License
//
// Author: Michael Schmalle, Principal Architect
// mschmalle at teotigraphix dot com
////////////////////////////////////////////////////////////////////////////////
-->
<f:LayoutGroup xmlns:f="library://ns.feathersui.com/mxml"
               xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:component="com.teotigraphix.ui.component.*"
               xmlns:transport="touch4bitwig.ui.component.transport.*"
               xmlns:track="touch4bitwig.ui.component.track.*"
               styleName="{StyleNames.MAIN_HEADER}">


    <f:layout>
        <f:VerticalLayout gap="5" padding="5"/>
    </f:layout>

    <!-- Main header bar -->
    <component:HGroup percentWidth="100" gap="5">

        <component:UIToggleButton id="activeEngineButton"
                                  isToggle="true"
                                  maxWidth="75"
                                  styleName="active-engine-button"
                                  defaultIcon="{AssetMap.createImage('bitwig-icon-skin')}"
                                  defaultSelectedIcon="{AssetMap.createImage('bitwig-icon-selected-skin')}"
                                  change="activeEngineButtonChange(activeEngineButton.isSelected)">

            <component:layoutData>
                <f:HorizontalLayoutData percentWidth="100" percentHeight="100"/>
            </component:layoutData>

        </component:UIToggleButton>

        <transport:TransportBar>
            <transport:layoutData>
                <f:HorizontalLayoutData percentHeight="100"/>
            </transport:layoutData>
        </transport:TransportBar>

        <f:LayoutGroup id="spacer">
            <f:layoutData>
                <f:HorizontalLayoutData percentWidth="100"/>
            </f:layoutData>
        </f:LayoutGroup>

        <track:TrackNavigationControl>

        </track:TrackNavigationControl>

    </component:HGroup>

    <component:HGroup percentWidth="100" minHeight="50" horizontalAlign="center">

        <f:TabBar id="tabBar"
                  direction="horizontal" distributeTabSizes="true"
                  change="tabBar_changeHandler()">
            <f:layoutData>
                <f:HorizontalLayoutData percentHeight="100" />
            </f:layoutData>
        </f:TabBar>

    </component:HGroup>


    <fx:Script><![CDATA[
        import com.teotigraphix.ui.theme.AssetMap;

        import feathers.data.ListCollection;
        import feathers.skins.IStyleProvider;

        import touch4bitwig.theme.StyleNames;

        public static const EVENT_ACTIVE_ENGINE_CHANGE:String = "activeEngineChange";
        public static const EVENT_SCREEN_CHANGE:String = "screenChange";

        public static var globalStyleProvider:IStyleProvider;
        private var noChange:Boolean; // XXX HACK!

        override protected function get defaultStyleProvider():IStyleProvider
        {
            return MainHeader.globalStyleProvider;
        }

        private function activeEngineButtonChange(selected:Boolean):void
        {
            dispatchEventWith(MainHeader.EVENT_ACTIVE_ENGINE_CHANGE, false, selected);
        }

        public function setActiveEngine(active:Boolean):void
        {
            activeEngineButton.setIsSelected(active);
        }

        public function setScreenDataProvider(collection:ListCollection):void
        {
            noChange = true;
            tabBar.dataProvider = collection;
            noChange = false;
        }

        public function setScreenIndex(screenIndex:int):void
        {
            noChange = true;
            tabBar.selectedIndex = screenIndex;
            noChange = false;
        }

        private function tabBar_changeHandler():void
        {
            if (!noChange)
                dispatchEventWith(MainHeader.EVENT_SCREEN_CHANGE, false, tabBar.selectedItem.screen);
        }
        ]]></fx:Script>
</f:LayoutGroup>